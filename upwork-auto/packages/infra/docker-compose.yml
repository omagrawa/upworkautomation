version: '3.8'

services:
  # PostgreSQL Database for n8n
  postgres:
    image: postgres:latest
    container_name: upwork-auto-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - upwork-auto-network

  # Adminer - Database Management UI
  adminer:
    image: adminer:latest
    container_name: upwork-auto-adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - upwork-auto-network

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: upwork-auto-n8n
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      
      # n8n Configuration
      N8N_PORT: ${N8N_PORT}
      WEBHOOK_URL: ${N8N_WEBHOOK_URL}
      
      # Additional Environment Variables for Workflow
      APIFY_TOKEN: ${APIFY_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      STORAGE_TARGET: ${STORAGE_TARGET}
      SHEETS_ID: ${SHEETS_ID}
      PGHOST: postgres
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB}
      PGPORT: 5432
      AUTO_SUBMIT: ${AUTO_SUBMIT}
      APIFY_USERNAME: ${APIFY_USERNAME}
      APIFY_SUBMIT_ACTOR_ID: ${APIFY_SUBMIT_ACTOR_ID}
    ports:
      - "${N8N_PORT}:${N8N_PORT}"
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - upwork-auto-network

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local

networks:
  upwork-auto-network:
    driver: bridge
